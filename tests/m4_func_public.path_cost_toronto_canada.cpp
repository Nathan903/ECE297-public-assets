#include <random>
#include <iostream>
#include <UnitTest++/UnitTest++.h>

#include "StreetsDatabaseAPI.h"
#include "m1.h"
#include "m3.h"
#include "m4.h"

#include "unit_test_util.h"
#include "courier_verify.h"

using ece297test::relative_error;
using ece297test::courier_path_is_legal;


SUITE(path_cost_toronto_canada_public) {
    TEST(path_cost_toronto_canada) {
        std::vector<StreetSegmentIdx> path;
        double turn_penalty;
        double expected;
        double actual;

        path = {167416, 167415, 191309, 191308, 62867, 191307, 62734, 191685, 278045, 278044, 191686, 191687, 278047, 278048, 278049, 278050, 278051, 197087, 197086, 278055, 278052, 278053, 278057, 278058, 278059, 159966, 278067, 278068, 278069, 62866, 62865, 62864, 62863, 62764, 215337, 216792, 216790, 278071, 278102, 278074, 216791, 278072, 215321, 110284, 260525, 110327, 110282, 110309};
        turn_penalty = 44.77880467381613983;
        expected = 318.90500235350987168;
        actual = computePathTravelTime(path, turn_penalty);
        CHECK(relative_error(expected, actual) < 0.002000000);

        path = {2, 144, 143, 6349, 122694, 145, 11, 46988, 89320, 138, 139, 250648, 122564, 98651, 250647, 430, 136127, 136130, 250645, 250644, 28204, 28205, 116741, 136134, 136138, 183485, 120799, 183488, 120800, 250634, 433, 116740, 222940, 431, 114958, 114959, 114960, 114961, 114962, 114957, 117393, 216841, 117390, 117391, 117392, 191499, 8194, 8193, 3940, 15942, 131144, 43099, 43100, 43101, 131145, 131140, 131141, 131142, 131143, 137193, 137194, 83354, 150816, 150817, 83358, 83350, 83351, 83365, 83366, 83367, 83368, 83369, 83370, 83371, 83372, 15633, 15634, 15635, 15636, 15637, 15638, 15639, 15640, 15641, 15642, 15643, 15644, 15645, 15646, 15647, 15648, 15649, 15650, 15651, 15652, 145686, 190178, 145687, 145689, 145683, 145684, 105736, 278120, 14599, 14600, 14601, 14602};
        turn_penalty = 0.00000000000000000;
        expected = 685.90987597223772809;
        actual = computePathTravelTime(path, turn_penalty);
        CHECK(relative_error(expected, actual) < 0.002000000);

        path = {28098, 151174, 151175, 151176, 226937, 151172, 151173, 151177, 22530, 22494, 156598, 156599, 21657, 165869, 112047, 112039, 112040, 147663, 147662, 147661, 147660, 147659, 147656, 177739, 177740, 146000, 155147, 177737, 140740, 147653, 195797, 19116, 156597, 117605, 28535, 28536, 129607, 119447, 47623, 47624, 129610, 129611, 22716, 22717, 22718, 129614, 107412, 107410, 33927, 131547, 172575, 172576, 188426, 221458, 221462, 188412, 33940, 216473, 216474, 216475, 216476, 216477, 188417, 188414, 98641, 23019, 188428, 188429, 188430, 104897, 104898, 216524, 216525, 216526, 216478, 216479, 216480, 216481, 179838, 179841, 104894, 166834, 82245, 82244, 82241, 262139, 216637, 103952, 183715, 171462, 188373, 188074, 109538, 217221, 188377, 188378, 109540, 109541, 109542, 109543, 109544, 54666, 54667, 54668, 54669, 54670, 54671, 122380, 122387, 187695, 187694, 270756, 119342, 187696, 119355, 119354, 119353, 119352, 119351, 119350, 119349, 119348, 175365, 175361, 175362, 175363, 175369, 175370, 119364, 119363, 119362, 119361, 119360};
        turn_penalty = 1.67849613271512799;
        expected = 808.87217905647389671;
        actual = computePathTravelTime(path, turn_penalty);
        CHECK(relative_error(expected, actual) < 0.002000000);

        path = {47528, 47529, 194531, 194532, 194533, 47542, 47541, 47540, 138348, 184697, 191989, 168704, 168705, 168706, 168703, 168707, 169074, 169076, 169075, 169072, 169073, 159403, 159404, 227258, 227259, 227260, 227261, 227262, 227263, 227264, 159392, 159393, 159394, 159395, 159396, 159397, 159398, 159399, 159400, 159401, 159402, 135433, 135434, 142750, 217280, 191998, 191999, 142742, 142743, 142744, 142745, 142746, 142747, 142748, 142749, 190797, 190798, 190795, 155360, 155359, 107077, 184017, 155361, 150798, 150799, 150800, 150801, 150802, 226826, 271386, 6972, 256485, 256486, 56410, 56411, 56412, 56413, 56414, 56415, 56416, 10966, 223372, 10967, 218315, 168714, 11426, 11427, 227100, 180235, 180236, 180237, 219469, 190804, 190806, 190807, 190801, 190802, 190803, 190796, 190800, 196295, 169515, 107076, 190799, 190805, 152844, 152826, 190809, 190808, 183380, 183381, 183382, 183383, 183384, 183385, 250334, 250335, 250336, 250337, 250338, 183386, 183387, 152827, 152828, 152829, 152830, 152831, 152832, 152833, 152834, 152835, 152836, 152837, 152838, 152839, 152840, 152841, 270673, 270674, 270675, 250333, 190059, 190060, 221581, 221582, 190058, 221576, 221577, 221578, 221579, 221580, 4214, 4215, 4216, 25516, 25517, 28216, 28217, 28218, 28219, 28220, 228255, 4233, 4234, 143030, 161052, 28228, 28229, 28230, 188735, 11230, 11231, 11232, 11233, 86512, 86513, 220640, 11435};
        turn_penalty = 17.54021232368053873;
        expected = 830.10582415128862976;
        actual = computePathTravelTime(path, turn_penalty);
        CHECK(relative_error(expected, actual) < 0.002000000);

        path = {134040, 165892, 408, 248801, 29164, 216129, 216519, 222980, 222971, 222970, 119493, 190255, 230241, 28930, 138730, 138732, 222973, 222974, 119590, 119591, 222987, 222988, 180864, 180865, 189382, 5705, 128641, 160890, 188661, 67694, 67693, 67692, 188660, 188652, 272442, 272439, 172808, 188715, 272448, 272447, 188717, 188716, 188658, 188659, 188657, 188656, 272426, 272423, 67695, 67696, 67697, 188665, 188664, 188662, 188663, 54729, 54730, 80215, 80214, 80216, 80217, 80218, 88824, 88815, 190594, 190595, 190593, 190596, 88816, 88817, 88818, 88819, 88820, 88821, 88822, 88823, 54734, 54735, 54736, 144247, 144248, 69459, 69444, 69445, 69463, 48358, 28789, 227392, 227393, 227394, 272450, 272451, 227391, 47400, 47401, 67999, 67984, 162487, 222378, 68007, 68000, 67991, 67985, 67986, 67987, 229704, 229705, 229706, 229707, 229708, 229709, 229703, 68014, 68015, 68016, 68017, 68018, 257893, 257894, 257895, 257896, 272458, 272457, 272460, 272459, 71203, 71204, 71205, 71206, 183799, 142789, 142790, 67814, 232681, 232678, 214865, 214866, 214867, 214868, 214869, 214870};
        turn_penalty = 34.77809088384424285;
        expected = 855.13083329483356465;
        actual = computePathTravelTime(path, turn_penalty);
        CHECK(relative_error(expected, actual) < 0.002000000);

        path = {186278, 87511, 185969, 137171, 137172, 137178, 137184, 135945, 135944, 135943, 135942, 136681, 136680, 136679, 136678, 136677, 136676, 55009, 140601, 140600, 140599, 140602, 55008, 277721, 152653, 152652, 140594, 140589, 249801, 116791, 249802, 116782, 15259, 15260, 1470, 15240, 15241, 156958, 162077, 9170, 9171, 106087, 249804, 132419, 192427, 11113, 11114, 192428, 192426, 116807, 116809, 23367, 23368, 132428, 132429, 132427, 563, 106074, 23398, 23399, 106077, 106078, 106079, 28293, 28294, 28303, 179099, 28297, 116827, 87447, 87438, 250658, 116828, 116833, 116834, 12021, 87455, 87456, 116849, 263289, 116850, 13343, 166255, 28379, 28380, 139874, 139875, 139876, 13331, 13330, 13329, 13328, 13327, 13326, 13325, 13324, 183373, 13335, 13336, 13337, 138912, 13334, 13323, 147533, 222895, 147534, 147535, 147536, 147537, 161960, 161962, 21000, 20999, 130623, 185313, 7411, 7412, 7413, 7414, 7415, 7416, 7417, 7418, 7419, 7420, 7421, 7422, 7423, 216510, 216511, 216512, 257174, 257175, 257176};
        turn_penalty = 1.91719144730037305;
        expected = 862.55319590342105585;
        actual = computePathTravelTime(path, turn_penalty);
        CHECK(relative_error(expected, actual) < 0.002000000);

        path = {162271, 195601, 224130, 148541, 148540, 148539, 148538, 148537, 148536, 75049, 75129, 75128, 75127, 75126, 75125, 75124, 249145, 222067, 75119, 75118, 249534, 249441, 215609, 246332, 249438, 105835, 246331, 222095, 246329, 222094, 250596, 222093, 222092, 161837, 182326, 182904, 182903, 182901, 101083, 161829, 133763, 133760, 133761, 26711, 26710, 250523, 133666, 221953, 250520, 250518, 250517, 250513, 250514, 250511, 250509, 250506, 53483, 172139, 172140, 54072, 50478, 53812, 61392, 61391, 250041, 165979, 250040, 250039, 61327, 61340, 61331, 61332, 190019, 190020, 61314, 61313, 61329, 61322, 61333, 61320, 61319, 61318, 231194, 61110, 61102, 61345, 61108, 61104, 191679, 191680, 61317, 61316, 61315, 231069, 231070, 61321, 61339, 61347, 61348, 231074, 190529, 231041, 231198, 61326, 191429, 191428, 190612, 190613, 190610, 190611, 61368, 61372, 57980, 57979, 57978, 57977, 57976, 57975, 57974, 57973, 57972, 57971, 57970, 57969, 57967, 88491, 88490, 88489, 88488, 88487, 88486, 88485, 88484, 88483, 88482, 88481, 88480, 88479, 88478, 88477, 88476, 88475, 88474, 88473, 88472, 88492, 120912, 120911, 120910, 120909, 120908, 120907, 120906, 120905, 172126, 277476, 120935, 63425, 63424, 63423, 63422, 63421, 63420, 63419, 63418, 63417, 63413, 63415, 225851, 225852, 87153, 225847, 225849, 225848, 87152, 160019, 160020, 63403, 63402, 63401, 63400, 63399, 63381, 63382, 63383, 63384, 63385, 63389, 63394, 63395, 63396, 63397, 63398, 87154, 87155, 143699, 143700};
        turn_penalty = 6.80727553984314948;
        expected = 1020.20019104091124973;
        actual = computePathTravelTime(path, turn_penalty);
        CHECK(relative_error(expected, actual) < 0.002000000);

        path = {164630, 164629, 164628, 164627, 164626, 120011, 120010, 120009, 120008, 120007, 120006, 120005, 120004, 120003, 120002, 120001, 120000, 119999, 119998, 119997, 119996, 190291, 177961, 177956, 177957, 177958, 119587, 119586, 119585, 119584, 190302, 190299, 190304, 186876, 186877, 216621, 216622, 184103, 184102, 153146, 190309, 255994, 248808, 248809, 248810, 248811, 256334, 256333, 150865, 176056, 119481, 138735, 230242, 28932, 119610, 222969, 223097, 222978, 119609, 165891, 407, 172066, 409, 172067, 183432, 176680, 47362, 47363, 176670, 179828, 185356, 118934, 118935, 118936, 118937, 5699, 5759, 5758, 222983, 5775, 5774, 128640, 141702, 141701, 28382, 28383, 28386, 28387, 139877, 554, 562, 116844, 87461, 87449, 116847, 116843, 116829, 250657, 116832, 87444, 87440, 116830, 116831, 249854, 28295, 28296, 116839, 28283, 28284, 249857, 10740, 10741, 249856, 28273, 28272, 28310, 28311, 20139, 20140, 124325, 106093, 249860, 10165, 260796, 124321, 152576, 249862, 67112, 191919, 67285, 67286, 184670, 66797, 66765, 66766, 66768, 66769, 66076, 66016, 65975, 66732, 66251, 44493, 44494, 44495, 44496, 44497, 44953, 44954, 44955, 44956, 44957, 44958, 44959, 44960, 44961, 44557, 44558, 44559, 44560, 44561, 44562, 44563, 44927, 44928, 44929, 44930, 44931, 44932, 44933, 249059, 249058, 249057};
        turn_penalty = 3.42981905088287276;
        expected = 1113.88065734665269702;
        actual = computePathTravelTime(path, turn_penalty);
        CHECK(relative_error(expected, actual) < 0.002000000);

        path = {12302, 12303, 12304, 12305, 264823, 264824, 227868, 158003, 128619, 227867, 168446, 168445, 168444, 5075, 119588, 119589, 277811, 128628, 222273, 222274, 28931, 138733, 230245, 230246, 222976, 119592, 190254, 119482, 150865, 190307, 248810, 153149, 121713, 255994, 190309, 153146, 184102, 184103, 186878, 216623, 216624, 186876, 190301, 190300, 190303, 119584, 119585, 119586, 119587, 177955, 177960, 177954, 159947, 159948, 159949, 216614, 216615, 216616, 216617, 120194, 120195, 120196, 120197, 120198, 120199, 120200, 120201, 120202, 119490, 119491, 120354, 120188, 46871, 46872, 93587, 93581, 30309, 30310, 30311, 30312, 30313, 235330, 235331, 235332, 191020, 235364, 191018, 167899, 167900, 167901, 167902, 167903, 167904, 167905, 167906, 167907, 215969, 215970, 215971, 215972, 215973, 215968, 143166, 143169, 143170, 177377, 177378, 177379, 177380, 177382, 177383, 143171, 142061, 142057, 142047, 142048, 175868, 164089, 164090, 216141, 175870, 175869, 142053, 142054, 142055, 142056, 104265, 104266, 104267, 104268, 104269, 104270, 104271, 104272, 104273, 104274, 188816, 216490, 188821, 105926, 105927, 105928, 105929, 105930, 105931, 105932, 105933, 105934, 188909, 188907, 188901, 188902, 188905, 188906, 188900, 188903, 188904, 188899, 188908, 188910, 188911, 188912, 188913, 175624, 175626, 104287, 33732, 33731, 33735, 33730, 34442, 34443, 34464};
        turn_penalty = 35.11650428888172115;
        expected = 1123.13828609509278067;
        actual = computePathTravelTime(path, turn_penalty);
        CHECK(relative_error(expected, actual) < 0.002000000);

        path = {167878, 167877, 167876, 167875, 167885, 278153, 167884, 167887, 145677, 145676, 145675, 145674, 145673, 145672, 145671, 145670, 145669, 145668, 105734, 105735, 165702, 165703, 15652, 15651, 15650, 15649, 15648, 15647, 15646, 15645, 15644, 15643, 15642, 15641, 15640, 15639, 15638, 15637, 15636, 15635, 15634, 15633, 83372, 83371, 83370, 83369, 83368, 83367, 83366, 83365, 83352, 190177, 83345, 83353, 83346, 190176, 83355, 150815, 83343, 83349, 83356, 83357, 83347, 218016, 145380, 145379, 145378, 190183, 190182, 190181, 145375, 145374, 145373, 145372, 145371, 145377, 145376, 28466, 28465, 136091, 136090, 136089, 136088, 136087, 136092, 60983, 60982, 60981, 60980, 60979, 60964, 60975, 60967, 60968, 144898, 144897, 144896, 144895, 144894, 191202, 190691, 190690, 159622, 13932, 13933, 190695, 167841, 167842, 167843, 167844, 167845, 167846, 167847, 167835, 167840, 167839, 167838, 167834, 167833, 167837, 167836, 57431, 57430, 57429, 57428, 57427, 57426, 57413, 57418, 57423, 168697, 168696, 156840, 156839, 168695, 168694, 156841, 191199, 158803, 894, 57432, 116690, 129789, 129790, 129791, 15929, 893, 13, 172132, 172133, 172134, 108261, 15924, 15923, 8186, 128731, 222120, 222121, 564, 128290, 9451, 9452, 39185, 39186, 39187, 39188, 147718, 39169, 39170, 39171, 145473, 3700, 85351, 109150, 3701, 85353, 109151, 12218, 251346, 141755, 141756, 88224, 88225, 88226, 88227, 224270, 224271, 224272, 224269, 73547, 73541, 73545, 13081, 13080, 13079, 13078, 13077, 251396, 226605, 226606};
        turn_penalty = 30.26936737054028725;
        expected = 1136.48048515093637434;
        actual = computePathTravelTime(path, turn_penalty);
        CHECK(relative_error(expected, actual) < 0.002000000);

        path = {214335, 214336, 214337, 214338, 77117, 77116, 220193, 137915, 137916, 137917, 137918, 137919, 137920, 137921, 137922, 137923, 137924, 137925, 27918, 166181, 192221, 192222, 180688, 180689, 189216, 180647, 180687, 180686, 274127, 274124, 166173, 166174, 274121, 274120, 214399, 187991, 274066, 274064, 187979, 187977, 187935, 274057, 274062, 187930, 187928, 187934, 274051, 274052, 187932, 187937, 187939, 187942, 187938, 187854, 187855, 187847, 187851, 187848, 187852, 98283, 214239, 224586, 224587, 187871, 98290, 187870, 98282, 187873, 187874, 187875, 187878, 187881, 98284, 187880, 187879, 98287, 187898, 276592, 276589, 187899, 98294, 98295, 98296, 187903, 276293, 187902, 276289, 187904, 98329, 227000, 226999, 214549, 276284, 276287, 214548, 214550, 214407, 214415, 214416, 264042, 98327, 98321, 276132, 276131, 98319, 98320, 264041, 264040, 98330, 98331, 98307, 276125, 276126, 98335, 98336, 276127, 276129, 98333, 98304, 98325, 98326, 98310, 98315, 98316, 98338, 98305, 42051, 193102, 176734, 176728, 176737, 176736, 176735, 252934, 176746, 176745, 153796, 153795, 173161, 173160, 173159, 153786, 218004, 252687, 252688, 153794, 153793, 153792, 153791, 153790, 153789, 153788, 153787, 218003, 218002, 124087, 124086, 124085, 160351, 160350, 160349, 160348, 160347, 160346, 160345, 160344, 160343, 252702, 252704, 252705, 252713, 252714, 252715, 252716, 252717, 252718, 252719, 252720, 160131, 124088, 12182, 188835, 188836, 114577, 114578, 188837, 252730, 252731, 252732, 252733, 252734, 192399, 132271};
        turn_penalty = 12.22740171002416254;
        expected = 1201.90902153669867403;
        actual = computePathTravelTime(path, turn_penalty);
        CHECK(relative_error(expected, actual) < 0.002000000);

        path = {240079, 94923, 94915, 94916, 94917, 94918, 94919, 94926, 94927, 133942, 133961, 235925, 235924, 235922, 235919, 172622, 172623, 172624, 190338, 190341, 26790, 235915, 235914, 141878, 189313, 189314, 235912, 189794, 141874, 141875, 85896, 85903, 85904, 34191, 34192, 85905, 13439, 13440, 85906, 85907, 85908, 85909, 85910, 34874, 85912, 85913, 85911, 85916, 85917, 85919, 85918, 91408, 91409, 85920, 242492, 85921, 117582, 249772, 249773, 107479, 249770, 85899, 249775, 249780, 36392, 95576, 95577, 12180, 12181, 85922, 85923, 85924, 85925, 85926, 85927, 106088, 249786, 2886, 2885, 107483, 133033, 249871, 215719, 130730, 130729, 14274, 134557, 34878, 260795, 171432, 189623, 189628, 189627, 189625, 20018, 20021, 20022, 168114, 168113, 168115, 168116, 168117, 168119, 168120, 168121, 70649, 70650, 70651, 70652, 70647, 70603, 70643, 70644, 70645, 70604, 70613, 70634, 70621, 275428, 275429};
        turn_penalty = 7.37650832194864137;
        expected = 1209.13276135324736060;
        actual = computePathTravelTime(path, turn_penalty);
        CHECK(relative_error(expected, actual) < 0.002000000);

        path = {132123, 132122, 132121, 132120, 132119, 132118, 132117, 132116, 132115, 132114, 129438, 252338, 252335, 43960, 189381, 45685, 45684, 45683, 95648, 255846, 255847, 150562, 150561, 150560, 95584, 150559, 95786, 95775, 95774, 242616, 96262, 96311, 96327, 96289, 96337, 250693, 250694, 250691, 250692, 96320, 96334, 96335, 124683, 91383, 91382, 91381, 91380, 240434, 250690, 91379, 9470, 19718, 249895, 132422, 219979, 91351, 124644, 124682, 107361, 249893, 249892, 133031, 249888, 852, 249887, 249884, 249883, 129355, 129356, 2866, 2865, 129353, 16211, 16210, 249868, 16219, 854, 129354, 106086, 249864, 10171, 10172, 10173, 141318, 141319, 29666, 20137, 20138, 28265, 28266, 28280, 28277, 102283, 116813, 116812, 1506, 116818, 157660, 68667, 68668, 68669, 10746, 10747, 10748, 10749, 10750, 10751, 10752, 10753, 10754, 10755, 10756, 68677, 277461, 68676, 68687, 68688, 68689, 68690, 222503, 222504, 222505, 222506, 222507, 222508, 16159, 157634, 69760, 69756, 157691, 157692, 157695, 157696, 190142, 157688, 157689, 16158, 278112, 222452, 222451, 222450, 222449, 222448, 222447, 222446, 222445, 222444, 190285, 190284, 196997, 197000};
        turn_penalty = 19.45167864269119207;
        expected = 1384.00307234574870563;
        actual = computePathTravelTime(path, turn_penalty);
        CHECK(relative_error(expected, actual) < 0.002000000);

        path = {29227, 29226, 29549, 29548, 134788, 134787, 134786, 134785, 134784, 134783, 134790, 134789, 16772, 16771, 160236, 129883, 129882, 129881, 129880, 129879, 133452, 133451, 133450, 133449, 133448, 133447, 133446, 133445, 133444, 133443, 133442, 7775, 5328, 5329, 143969, 143968, 29582, 142298, 142299, 129732, 142297, 5335, 39184, 39187, 39188, 147718, 39169, 39170, 39171, 145473, 133808, 85354, 85355, 85348, 85347, 85346, 106082, 85332, 145465, 145468, 145470, 145467, 9143, 28661, 116798, 240611, 28659, 28660, 116802, 107362, 128737, 132419, 192427, 11113, 11114, 192428, 192426, 116807, 116809, 23367, 23368, 132428, 132429, 132427, 563, 106074, 23398, 23399, 106077, 106078, 106079, 28293, 28294, 28303, 179099, 28297, 116827, 87447, 87438, 250658, 116828, 116833, 12019, 12020, 2644, 87457, 2366, 28397, 28398, 86792, 86793, 141731, 141734, 141726, 141732, 141727, 141737, 185987, 13373, 13374, 128657, 128659, 2864, 13382, 13383, 28683, 251013, 48326, 117339, 13362, 13364, 123384, 48321, 117337, 117334, 177854, 117335, 162471, 117570, 123407, 21054, 192384, 169144, 169394, 189965, 189968, 169145, 169146, 169147, 169148, 169224, 169206, 169210, 169220, 169209, 169207, 169208, 169212, 169213, 169214, 169215, 169216, 221199, 221198};
        turn_penalty = 13.23117671407310247;
        expected = 1447.33490849198142314;
        actual = computePathTravelTime(path, turn_penalty);
        CHECK(relative_error(expected, actual) < 0.002000000);

        path = {264989, 264986, 264985, 63996, 63997, 63998, 212056, 212065, 212064, 212073, 212059, 212062, 185936, 185937, 185938, 185939, 185940, 185941, 222357, 217425, 217426, 217434, 217427, 217428, 217429, 179100, 179101, 23385, 23386, 23387, 222360, 11110, 178264, 178263, 178265, 178266, 189745, 142103, 142104, 142105, 224250, 224249, 23377, 116807, 116809, 23367, 23368, 132428, 132429, 132427, 563, 106074, 23398, 23399, 106077, 106078, 106079, 28293, 28294, 28303, 179099, 28297, 116827, 87447, 87438, 250658, 116828, 116833, 116834, 12021, 87455, 87456, 116849, 263289, 116850, 5772, 13352, 13357, 13360, 13358, 13359, 128639, 5773, 557, 222982, 559, 222128, 120187, 120184, 89108, 560, 3645, 29935, 224758, 224759, 29936, 116943, 29937, 3646, 116941, 225827, 116942, 57096, 57099, 7162, 24563, 24562, 24552, 24551, 116953, 24118, 23807, 116954, 23197, 23196, 116959, 116960, 116957, 116958, 116964, 116965, 116963, 116971, 84176, 84173, 116975, 116977, 7230, 116982, 169916, 121714, 263657, 107824, 24528, 278116, 24529, 121688, 121689, 121690, 188396, 188401, 188398, 104148, 104149, 188402, 188403, 188404, 109332, 109292, 107829, 188132, 188137, 108795, 108796, 108797, 108790, 188144, 80008, 80009, 80010, 80011, 80002, 80001, 80000, 79999, 79998, 79997, 79996, 79995, 79875, 34047, 34048, 34049, 34050};
        turn_penalty = 0.00000000000000000;
        expected = 1511.54365152356172075;
        actual = computePathTravelTime(path, turn_penalty);
        CHECK(relative_error(expected, actual) < 0.002000000);

        path = {134485, 231879, 147612, 147611, 147610, 15753, 220438, 15752, 15751, 28030, 169717, 1250, 47216, 47215, 47217, 47218, 8040, 112100, 32328, 116737, 250934, 169970, 168902, 172143, 306, 196021, 196020, 108231, 108234, 108235, 308, 309, 166881, 155005, 155006, 133067, 133068, 107453, 107454, 107455, 185017, 133074, 320, 13756, 230735, 230734, 230733, 6968, 6967, 6966, 6965, 6964, 6963, 6962, 6961, 6960, 6959, 6958, 6957, 6956, 6955, 190673, 191152, 190674, 183421, 183420, 183419, 250990, 250989, 5076, 29719, 29716, 29717, 29718, 272147, 272148, 272149, 272150, 192555, 192559, 192554, 192556, 192557, 192558, 190619, 184301, 184302, 190620, 190621, 190622, 190623, 190624, 184109, 184110, 88708, 88709, 88710, 88711, 277508, 277509, 277510, 147523, 147524, 16206, 16207, 172730, 172731, 88712, 88713, 88714, 88715, 88716, 88717, 88718, 88719, 88720, 88721, 88722, 222856, 190286, 88704, 253776, 253777, 253778, 190283, 141030, 249844, 174249, 88124, 88121, 56993, 193103, 165878, 165877, 141323, 141321, 184871, 184866, 184864, 184699, 184859, 192124, 141320, 88125, 184855, 855, 184854, 135259, 29662, 185500, 185501, 29660, 219875, 116821, 89078, 89079, 28306, 28307, 249852, 249853, 116810, 223735, 223736, 249858, 249859, 28276, 28312, 28313, 20139, 20140, 124325, 106093, 249860, 124323, 10170, 10169, 125364, 124324, 124320, 249865, 106094, 249867, 124331, 124344, 249866, 16213, 16214, 2867, 124337, 129352, 124333, 2883, 124335, 124332, 268053, 268054, 268055, 252033, 252032, 232395, 12547, 12548, 252029, 129359, 129360, 155021, 36369, 36370, 36371, 36372, 36373, 183454, 273006, 273007, 155022, 252025, 272998, 272996, 272997, 100979, 100980, 100981, 100982, 234208};
        turn_penalty = 0.00000000000000000;
        expected = 1547.67497458466777971;
        actual = computePathTravelTime(path, turn_penalty);
        CHECK(relative_error(expected, actual) < 0.002000000);

        path = {178623, 178521, 178522, 178523, 178524, 178525, 178526, 178527, 178528, 96998, 145643, 145644, 97031, 251518, 243512, 151433, 151434, 151442, 151437, 151438, 249889, 46216, 192785, 46214, 162434, 145642, 145641, 91350, 852, 249887, 249884, 249883, 129355, 129356, 2866, 2865, 129353, 16211, 16210, 249868, 16219, 854, 129354, 106086, 249864, 10171, 10172, 10173, 141318, 141319, 1503, 267012, 117606, 124322, 20141, 28314, 28315, 28271, 28269, 28270, 106075, 116814, 23392, 23393, 116816, 116815, 6332, 132425, 132426, 116822, 116823, 23373, 23374, 116808, 106076, 249806, 119680, 9153, 116795, 116794, 116796, 106091, 116797, 28653, 28654, 240608, 28666, 28667, 6347, 6348, 145466, 145471, 145469, 85333, 145464, 85337, 85338, 85339, 85360, 85361, 118839, 118840, 39177, 39178, 39179, 39180, 39181, 267831, 267830, 39191, 15914, 9457, 9458, 9459, 128289, 0, 172130, 172131, 222122, 15926, 8187, 250651, 108263, 116679, 258078, 565, 116686, 12403, 116692, 116691, 157956, 12413, 147719, 83481, 147556, 191222, 161855, 161852, 161853, 161854, 12398, 12399, 160750, 160751, 160752, 160753, 160272, 168759, 168760, 168761, 60736, 160146, 160147, 60741, 60733, 60734, 142755, 60743, 60744, 142753, 142754, 60739};
        turn_penalty = 18.53930724171296163;
        expected = 1548.25089902521813201;
        actual = computePathTravelTime(path, turn_penalty);
        CHECK(relative_error(expected, actual) < 0.002000000);

        path = {237051, 237049, 167892, 215128, 215129, 162519, 191280, 162515, 162516, 162517, 162518, 235164, 191568, 191563, 191567, 191569, 191570, 107347, 90422, 235171, 235172, 22997, 22998, 22999, 235170, 235173, 235180, 235157, 235181, 235182, 235183, 235184, 170714, 170721, 191007, 235193, 170724, 235192, 87486, 87484, 235195, 235196, 170717, 170718, 170723, 176554, 170720, 119435, 235204, 27970, 27969, 27968, 188080, 27976, 235207, 235208, 151029, 151027, 151025, 151026, 151030, 151028, 191458, 190985, 235213, 235212, 235211, 155150, 155151, 119434, 192314, 192313, 133962, 119437, 27988, 27989, 167179, 119436, 165944, 165945, 121109, 191296, 191295, 121106, 105431, 105432, 188432, 121107, 27990, 27991, 27992, 27993, 27994, 141805, 27973, 119448, 129573, 129574, 28533, 28534, 250912, 117601, 22556, 22555, 250914, 22576, 116715, 250916, 102124, 5170, 140707, 5188, 156683, 156499, 70996, 670, 19018, 140783, 141397, 13729, 13728, 19012, 19013, 116727, 250926, 19001, 19000, 11942, 11947, 116726, 70989, 70990, 250930, 9444, 669, 40039, 40040, 165863, 250932, 250931, 250933, 168903, 11585, 169971, 160733, 160734, 156533, 6210, 223367, 47161, 225352, 223368, 17756, 17757, 102284, 117562, 117563, 117564, 117565, 86625, 86626, 86627, 86628, 86629, 163826, 163827, 163825, 115924, 162046, 191447};
        turn_penalty = 43.26898993091053569;
        expected = 1558.16389749598261005;
        actual = computePathTravelTime(path, turn_penalty);
        CHECK(relative_error(expected, actual) < 0.002000000);

        path = {251723, 251724, 251716, 251717, 221654, 221659, 221660, 221661, 251694, 17630, 116831, 249854, 28295, 28296, 116826, 28285, 28286, 28281, 28282, 150725, 150726, 106075, 116814, 23392, 23393, 116816, 116815, 6332, 132425, 132426, 116822, 116823, 23373, 23374, 116808, 106076, 249806, 119680, 9153, 116795, 116794, 116796, 106091, 116797, 28653, 28654, 240608, 28666, 28667, 6347, 6348, 145466, 145471, 145469, 85333, 145464, 85337, 85338, 85339, 85360, 85361, 118839, 118840, 39177, 39178, 39179, 39180, 39181, 267831, 267830, 39191, 15914, 9457, 9458, 9459, 128289, 109, 172128, 172129, 108, 136129, 122564, 98651, 250647, 430, 136127, 136130, 250645, 250644, 28204, 28205, 116741, 136134, 136138, 183485, 120799, 183488, 120800, 250634, 222938, 250631, 250630, 250628, 136301, 136300, 250627, 250624, 136307, 136308, 136354, 136346, 136349, 136351, 169200, 169203, 169201, 169202, 169204, 136350, 136388, 137027, 137030, 137034, 250590, 250589, 137028, 137026, 250586, 250587, 250585, 141236, 141237, 9857, 9856, 16203, 124596, 20085, 20086, 64050, 20087, 20088, 9853, 305, 250584, 251866, 251867, 196268, 196269, 196270, 196271, 196272, 196273, 196267, 302, 303, 243223, 105009};
        turn_penalty = 23.17018073295285063;
        expected = 1640.29022653947163235;
        actual = computePathTravelTime(path, turn_penalty);
        CHECK(relative_error(expected, actual) < 0.002000000);

        path = {174448, 174280, 174281, 174282, 174283, 214951, 174286, 174293, 174288, 174289, 222018, 222026, 222027, 174823, 174824, 174825, 174826, 174827, 188624, 188615, 188623, 174828, 174829, 174830, 217139, 217140, 217141, 217142, 217116, 217126, 217135, 217136, 217113, 217114, 217119, 217138, 188620, 188622, 188613, 188616, 189005, 224161, 224160, 224158, 224154, 224149, 224150, 170799, 189003, 189004, 170802, 170798, 170800, 189008, 170846, 170847, 114615, 114616, 220747, 220744, 220745, 220748, 32127, 263272, 107485, 117029, 251005, 8017, 263277, 107476, 8004, 8005, 48318, 48314, 117318, 48308, 48307, 251007, 524, 21076, 117322, 251011, 441, 117332, 251012, 117333, 117331, 117340, 48322, 117338, 48320, 13361, 442, 48327, 48325, 13392, 251016, 251017, 13391, 251018, 251019, 28419, 28420, 251022, 28432, 28433, 251024, 111838, 443, 128647, 28391, 251026, 28392, 128648, 251027, 5749, 5748, 266218, 414, 128626, 5745, 5744, 5735, 266219, 128636, 266220, 266221, 415, 266222, 266223, 416, 129646, 129647, 10671, 10677, 29645, 29646, 266224, 22589, 22585, 8026, 22564, 22565, 22532, 22533, 22543, 22542, 250913, 250911, 117604, 117605, 28535, 28536, 129607, 119447, 47623, 47624, 129610, 129611, 22716, 22717, 22718, 129614, 107412, 107410, 131505, 30114, 30115, 27780, 27779, 129541, 129550, 1251, 1252, 129551, 23561, 141604, 23562, 129544, 129552, 8482, 129539, 129540, 137759, 235255, 137756, 129530, 129526, 129527, 27150, 129511, 153010, 153008, 137803, 137828, 153015, 137809, 137810, 174773, 129508, 264228, 129510, 129509, 157762, 129507, 133822, 264496, 264497, 264498, 264490, 264491, 264459, 264468, 264467};
        turn_penalty = 19.17228723490339704;
        expected = 1874.01995282579468949;
        actual = computePathTravelTime(path, turn_penalty);
        CHECK(relative_error(expected, actual) < 0.002000000);

        path = {1064, 1066, 1067, 90213, 90214, 5961, 217605, 5441, 5442, 6358, 6357, 47397, 47396, 47395, 47394, 47393, 47392, 47391, 47390, 47389, 187398, 10477, 186442, 10476, 47381, 47382, 47383, 47384, 47385, 47386, 47387, 47388, 150574, 150573, 191205, 191206, 194245, 194244, 191823, 194181, 191824, 150575, 364, 240513, 240514, 240515, 240516, 240517, 240518, 240519, 150154, 180947, 150155, 180948, 102009, 102010, 102011, 102012, 102013, 190575, 190579, 190580, 190581, 150600, 6064, 86149, 86139, 86140, 86141, 86142, 155707, 155710, 155711, 155712, 185146, 155708, 86214, 86215, 86216, 86217, 86218, 150401, 150403, 150404, 155350, 30275, 47349, 47350, 131772, 16207, 172730, 172731, 88712, 88713, 88714, 88715, 88716, 88717, 88718, 88719, 88720, 88721, 88722, 222856, 190286, 88704, 253776, 253777, 253778, 190283, 141030, 249844, 174249, 88124, 88121, 253770, 174248, 157221, 249838, 249839, 249840, 249841, 249842, 222439, 222440, 222441, 222442, 222443, 190288, 190282, 137380, 137381, 221632, 221631, 16168, 16169, 16170, 16171, 70132, 141327, 70133, 70129, 70141, 30182, 188697, 11987, 188693, 188696, 5693, 188695, 113176, 188694, 113178, 113179, 272428, 272429, 144146, 144147, 132589, 272432, 272431, 30181, 188655, 188653, 188654, 272425, 272426, 188656, 188657, 188659, 188658, 188716, 188717, 272447, 272448, 188715, 172808, 272439, 272442, 188652, 188660, 67692, 67693, 67694, 188661, 5704, 180866, 128642, 128643, 128644, 57104, 192533, 220685, 5696, 128633, 5752, 5751, 559, 222128, 120187, 120184, 89108, 560, 128662, 30326, 30325, 29921, 29922, 121684, 121678, 121682, 223109, 118428, 118427, 11219, 158684, 158683, 158359, 30118, 133658, 30119, 30120, 30121, 30122, 191268, 54673, 216030, 216031, 216032, 216033, 216034, 54674, 54675, 177528, 39694, 39695, 39696, 40931, 40957, 40952};
        turn_penalty = 25.71679010554763423;
        expected = 1961.78180569084565832;
        actual = computePathTravelTime(path, turn_penalty);
        CHECK(relative_error(expected, actual) < 0.002000000);

        path = {108273, 151936, 151939, 151941, 180158, 248118, 248119, 248120, 75745, 75737, 75738, 75748, 75749, 75750, 170968, 248134, 170969, 170970, 225779, 225780, 76570, 76571, 76549, 76547, 76552, 172069, 172070, 172068, 74006, 74002, 74007, 74175, 74183, 74178, 74186, 74187, 74193, 74192, 74191, 74198, 74199, 74200, 74218, 251459, 74219, 74220, 74221, 74214, 74223, 74225, 74226, 149293, 74205, 74207, 74208, 74210, 74211, 74212, 72963, 72962, 72959, 253971, 253972, 253973, 72964, 72965, 72966, 27228, 27226, 27227, 72967, 72970, 72971, 72972, 254175, 110893, 110894, 110880, 110890, 26277, 250512, 250515, 250516, 250519, 176239, 133667, 250521, 250522, 26712, 26713, 133762, 133764, 133765, 129978, 129977, 129981, 143527, 176240, 26701, 26702, 140684, 19081, 19082, 91265, 91266, 129959, 108296, 250524, 250525, 130246, 108298, 108299, 91197, 91198, 91191, 91192, 91193, 91194, 91195, 91196, 133687, 121805, 121806, 113346, 131221, 162404, 247358, 247359, 176199, 184990, 184997, 184999, 217467, 216875, 216874, 184992, 184991, 162403, 162402, 184987, 170688, 185005, 166495, 74607, 74610, 74603, 74612, 166494, 166492, 166497, 166493, 254762, 254755, 254763, 254753, 254752, 254756, 166499, 166500, 186844, 186845, 108507, 108508, 108509, 108510, 186846, 186847, 186848, 186849, 168601, 168602, 50007, 50008, 53163, 131730, 131731, 52793, 53351, 49836, 218032, 218033, 218034, 216015, 216016, 216014, 216013, 278078, 278084, 216787, 215343, 62879, 62878, 218358, 62886, 62885, 62882, 62881, 62880, 62869, 62884, 188743, 188742, 108612, 62877, 159045, 49601, 51743, 51742, 54229, 54228, 49443, 51177, 99130};
        turn_penalty = 30.33507082458857695;
        expected = 2002.68292138792253354;
        actual = computePathTravelTime(path, turn_penalty);
        CHECK(relative_error(expected, actual) < 0.002000000);

        path = {34268, 34267, 34266, 34265, 34264, 34263, 34261, 34260, 34259, 34258, 34252, 171156, 171155, 171154, 171153, 171152, 216362, 216363, 216364, 216365, 216366, 216367, 216537, 216538, 216304, 216305, 216306, 216307, 216308, 216309, 216558, 216560, 216561, 216035, 175939, 140778, 175940, 30124, 30125, 11218, 29908, 29909, 252801, 29927, 29928, 411, 30320, 30321, 30322, 128660, 128661, 120183, 120182, 25798, 25800, 25801, 120353, 556, 222983, 5775, 5774, 128640, 141702, 141701, 28382, 28383, 28386, 28387, 139877, 554, 562, 116844, 87461, 87449, 116847, 116843, 116829, 250657, 116832, 87444, 87440, 116830, 116831, 249854, 28295, 28296, 116826, 28285, 28286, 28281, 28282, 150725, 150726, 106075, 116814, 23392, 23393, 116816, 116815, 6332, 132425, 132426, 116822, 116823, 23373, 23374, 116808, 106076, 249806, 119680, 9153, 116795, 116794, 116796, 106091, 116797, 28653, 28654, 240608, 28666, 28667, 6347, 6348, 145466, 145471, 145469, 85333, 145464, 85337, 85338, 85339, 85360, 85361, 118839, 118840, 39177, 39178, 39179, 39180, 39181, 267831, 267830, 39191, 15914, 9457, 9458, 9459, 128289, 0, 172130, 172131, 222122, 15926, 8187, 250651, 108263, 15, 116681, 116683, 147705, 129791, 15929, 116689, 258077, 15930, 15931, 15932, 105786, 105787, 145198, 145199, 148818, 148819, 148820, 148821, 87230, 87229, 166251, 166250, 245970};
        turn_penalty = 44.58619277333233555;
        expected = 2046.62512315753292569;
        actual = computePathTravelTime(path, turn_penalty);
        CHECK(relative_error(expected, actual) < 0.002000000);

        path = {145675, 145674, 145673, 145672, 145671, 145670, 145669, 145668, 105734, 105735, 165702, 165703, 15652, 15651, 15650, 15649, 15648, 15647, 15646, 15645, 15644, 15643, 15642, 15641, 15640, 15639, 15638, 15637, 15636, 15635, 15634, 15633, 83372, 83371, 83370, 83369, 83368, 83367, 83366, 83365, 83352, 190177, 83345, 83353, 83346, 190176, 83355, 150815, 83343, 83349, 83356, 83357, 83347, 218016, 145380, 145379, 145378, 190183, 190182, 190181, 145375, 145374, 145373, 145372, 145371, 145377, 145376, 28466, 28465, 136091, 136090, 136089, 136088, 136087, 136092, 60983, 60982, 60981, 60980, 60979, 60964, 60975, 60967, 60968, 144898, 144897, 144896, 144895, 144894, 191202, 190691, 190690, 159622, 13932, 13933, 190695, 167841, 167842, 167843, 167844, 167845, 167846, 167847, 167835, 167840, 167839, 167838, 167834, 167833, 167837, 167836, 57431, 57430, 57429, 57428, 57427, 57426, 57413, 57418, 57423, 168697, 168696, 156840, 156839, 168695, 168694, 156841, 191199, 158803, 894, 57432, 116690, 129789, 129790, 129791, 15929, 893, 13, 172132, 172133, 172134, 108261, 15924, 15923, 8186, 128731, 222120, 222121, 564, 128290, 9451, 9452, 39185, 39186, 39187, 39188, 147718, 39169, 39170, 39171, 145473, 133808, 85354, 85355, 85348, 85347, 85346, 106082, 85332, 145465, 145468, 145470, 145467, 9143, 28661, 116798, 240611, 28659, 28660, 116802, 107362, 128737, 132419, 192427, 11113, 11114, 192428, 192426, 116807, 116809, 23367, 23368, 132428, 132429, 132427, 563, 106074, 23398, 23399, 106077, 106078, 106079, 28293, 28294, 28303, 179099, 28297, 116827, 87447, 87438, 250658, 116828, 12018, 116842, 116838, 215113, 116841, 146596, 12006, 12007, 270743, 277921, 270737, 270738, 270739, 270740, 270741, 146598, 146601, 146602, 146603, 146604, 26928, 26929, 26930, 26931, 26932, 26933, 26934, 189882, 189883, 277892, 277891, 17649, 17650, 17651, 17652, 17653, 17654, 17655, 17656, 17657, 17658, 17659, 17660, 17661, 17662, 17663, 17664, 17665, 17666, 17667, 17668, 17669, 193480, 189909, 193479, 189891, 189892, 189893, 189894, 189895, 189896, 189897, 189898, 189899, 189900, 189901, 189902, 189903, 189904, 189905, 189906, 189907, 189908, 21055, 21056, 147343, 250995, 189971, 180896, 180898, 196328, 196327, 119515, 119516, 119517, 187112, 147342, 183433, 28425, 277915, 28426, 28427, 187156, 187165, 187166, 187164, 147346, 187168, 117570, 123407, 21054, 192384, 169144, 169394, 189965, 189968, 169145, 169146, 169147, 169148, 169224, 169223, 119501, 163006, 180915, 180916, 107724, 221496, 221497, 174454, 174455, 107742, 107743, 174453, 107740, 107731, 107732, 107733, 252617, 252616, 123395, 123396, 123397, 123398, 123399, 123400, 123401, 123402, 123403, 123404, 123405, 123406};
        turn_penalty = 36.43049940423171051;
        expected = 2071.10513314536819962;
        actual = computePathTravelTime(path, turn_penalty);
        CHECK(relative_error(expected, actual) < 0.002000000);

        path = {14402, 168550, 168551, 168552, 168553, 168554, 168555, 168556, 168557, 168558, 168559, 168560, 168561, 168562, 219074, 219075, 219076, 137398, 137399, 137395, 137396, 137397, 118563, 158127, 118547, 118548, 118549, 118552, 118553, 118554, 118555, 118556, 137410, 137411, 137412, 137413, 137414, 137415, 137416, 137417, 137418, 137419, 137405, 137406, 137407, 137408, 137409, 5325, 5326, 5327, 129826, 129825, 129824, 129733, 9140, 5330, 15920, 39186, 39187, 39188, 147718, 39169, 39170, 39171, 145473, 133808, 85354, 85355, 85348, 85347, 85346, 106082, 85332, 145465, 145468, 145470, 145467, 9143, 28661, 116798, 240611, 28659, 28660, 116802, 107362, 128737, 132419, 192427, 11113, 11114, 192428, 192426, 116807, 116809, 23367, 23368, 132428, 132429, 132427, 563, 106074, 23398, 23399, 106077, 106078, 106079, 28293, 28294, 28303, 179099, 28297, 116827, 87447, 87438, 250658, 116828, 116833, 116834, 12021, 87455, 87456, 116849, 263289, 116850, 5772, 13352, 13357, 13360, 13358, 13359, 128639, 5773, 557, 222982, 559, 222128, 120187, 120184, 89108, 560, 3645, 29935, 224758, 224759, 29936, 116943, 29937, 3646, 116941, 225827, 116942, 57096, 57099, 7162, 24563, 24562, 24552, 24551, 116953, 24118, 23807, 116954, 23197, 23196, 116959, 116960, 116957, 7223, 116970, 219301, 7209, 7210, 7211, 165955, 165956, 222990, 23195, 86975, 86911, 86854, 87004, 87020, 87021, 87015, 87023, 87027, 87028, 87029, 87030, 87031, 87032, 87033, 87034, 87035, 87036, 87037, 87038, 31130, 31129, 32295, 32299, 32300, 109461};
        turn_penalty = 26.06136747164376999;
        expected = 2108.79109284931064394;
        actual = computePathTravelTime(path, turn_penalty);
        CHECK(relative_error(expected, actual) < 0.002000000);

        path = {111096, 111092, 77375, 77374, 219032, 219026, 219025, 242015, 242014, 242013, 152112, 152111, 152110, 152109, 151227, 151228, 151229, 151230, 256877, 272966, 272969, 256879, 231802, 231805, 231806, 186484, 272958, 272961, 272962, 186486, 231748, 231749, 231750, 231751, 231752, 231753, 272951, 272950, 231754, 231755, 231756, 231757, 231758, 231759, 231760, 231761, 231762, 231763, 231764, 231765, 256871, 231766, 231768, 256872, 231767, 154885, 154886, 154887, 154888, 154889, 154890, 168881, 256869, 241299, 154891, 154892, 154893, 188767, 188754, 188753, 178144, 178145, 178146, 178448, 66479, 66366, 88935, 88936, 151204, 151205, 256153, 178449, 178450, 151206, 151207, 271711, 271709, 182424, 233000, 182427, 233001, 85407, 85406, 66150, 271704, 66602, 271699, 66599, 251147, 251148, 85408, 251153, 251149, 251150, 232845, 232846, 232847, 182417, 182418, 182419, 182420, 188760, 214907, 188758, 188757, 188762, 188763, 188764, 188765, 188751, 188749, 188746, 188747, 188748, 32127, 263272, 107485, 117029, 251005, 8017, 263277, 107476, 8004, 8005, 48318, 48314, 117318, 48308, 48307, 251007, 524, 21076, 117322, 251011, 441, 117332, 251012, 117333, 117331, 117340, 48322, 117338, 48320, 13361, 442, 48327, 48325, 13392, 251016, 251017, 13391, 251018, 251019, 28419, 28420, 251022, 28432, 28433, 251024, 111838, 443, 128647, 28391, 251026, 28392, 128648, 251027, 5749, 5748, 266218, 414, 128626, 5745, 5744, 5735, 266219, 128636, 266220, 266221, 415, 266222, 266223, 416, 129646, 129647, 10671, 10677, 29645, 29646, 266224, 22589, 22585, 8026, 22564, 22565, 22532, 22533, 22543, 22542, 250913, 250911, 117604, 117605, 28535, 28536, 129607, 119447, 47623, 47624, 129610, 129611, 22716, 22717, 22718, 129614, 107412, 107410, 33927, 131547, 172575, 172576, 188426, 221458, 221462, 188412, 33940, 216473, 216474, 216475, 216476, 216477, 188417, 188414, 188418, 188424, 104904, 104905, 104906, 104907, 104908, 104909, 104910, 104918, 104919, 104945, 111871, 111870, 81879, 81878, 81877, 81876, 81875, 81874, 81873, 81872, 81871, 81870, 81891, 81890, 81889, 81888, 81887, 177088, 177087, 177086, 177085, 177084, 81858, 81835};
        turn_penalty = 33.45806031895191524;
        expected = 2129.71635669119996237;
        actual = computePathTravelTime(path, turn_penalty);
        CHECK(relative_error(expected, actual) < 0.002000000);

        path = {137974, 117009, 117011, 225870, 225869, 117015, 117013, 116994, 116999, 116998, 117001, 116986, 116987, 116989, 116991, 116988, 116990, 107816, 116976, 116974, 116978, 84174, 84175, 116972, 107821, 116966, 116967, 120370, 116961, 23200, 23198, 23199, 116955, 23806, 23805, 116956, 24550, 24560, 24564, 24561, 24558, 264267, 7170, 57100, 57095, 225828, 3651, 29938, 29931, 29932, 263419, 263418, 29919, 140768, 558, 120181, 120180, 192405, 120353, 556, 222983, 5775, 5774, 128640, 141702, 141701, 28382, 28383, 28386, 28387, 139877, 554, 562, 116844, 87461, 87449, 116847, 116843, 116829, 250657, 116832, 87444, 87440, 116830, 116831, 249854, 28295, 28296, 116839, 28283, 28284, 249857, 10740, 10741, 249856, 28273, 28272, 28310, 28311, 20139, 20140, 124325, 106093, 249860, 124323, 10170, 10169, 125364, 124324, 124320, 249865, 1513, 16221, 16220, 16215, 16216, 2892, 121789, 121791, 121794, 121788, 133033, 249871, 215719, 130730, 130729, 222985, 234702, 250441, 221950, 250442, 24381, 24382, 24403, 24404, 250444, 250445, 250457, 250468, 221996, 221997, 221999, 222000, 221998, 88084, 88085, 117303, 7749, 7750, 133692, 117302, 168437, 91254, 91255, 36281, 36282, 12763, 125605, 218790, 218789, 221304, 101849, 101867, 101855, 53013, 51315, 101842, 101843, 170076, 170077, 52024, 50721, 50044, 130827, 191609};
        turn_penalty = 11.47564690315255298;
        expected = 2296.96560159705040860;
        actual = computePathTravelTime(path, turn_penalty);
        CHECK(relative_error(expected, actual) < 0.002000000);

        path = {120466, 120465, 120436, 28894, 28893, 28892, 28891, 59077, 59074, 59075, 222815, 222814, 58829, 58828, 58826, 58825, 58824, 58851, 58850, 58845, 58848, 151244, 58854, 58856, 160247, 50794, 160245, 58814, 168666, 59017, 59018, 178312, 59016, 161696, 20104, 20105, 2168, 108892, 108888, 144799, 14047, 14048, 157936, 86749, 141599, 141598, 131283, 86750, 6143, 141313, 3, 4, 118841, 118842, 63879, 63880, 63881, 63899, 63900, 13944, 13945, 13946, 13947, 13909, 13910, 63405, 63406, 116701, 116700, 116695, 116684, 116685, 172132, 172133, 172134, 108261, 15924, 15923, 8186, 128731, 222120, 222121, 564, 128290, 9451, 9452, 39185, 39186, 39187, 39188, 147718, 39169, 39170, 39171, 145473, 133808, 85354, 85355, 85348, 85347, 85346, 106082, 85332, 145465, 145468, 145470, 145467, 9143, 28661, 116798, 240611, 28659, 28660, 116802, 107362, 128737, 132419, 192427, 11113, 11114, 192428, 192426, 116807, 116809, 23367, 23368, 132428, 132429, 132427, 563, 106074, 23398, 23399, 106077, 106078, 106079, 28293, 28294, 28303, 179099, 28297, 116827, 87447, 87438, 250658, 116828, 116833, 116834, 12021, 87455, 87456, 116849, 263289, 116850, 5772, 13352, 13357, 13360, 13358, 13359, 5770, 5771, 5701, 5761, 5760, 5762, 5763, 5743, 5742, 5735, 266219, 128636, 266220, 266221, 415, 266222, 266223, 416, 129646, 129647, 10671, 10677, 29645, 29646, 266224, 22589, 22585, 8026, 22564, 22565, 22532, 22533, 22543, 22542, 250913, 250911, 117604, 117605, 28535, 28536, 129607, 119447, 47623, 47624, 129610, 129611, 22716, 22717, 22718, 129614, 107412, 107410, 131505, 30114, 30115, 27780, 27779, 129541, 129550, 1251, 1252, 129551, 23561, 141604, 23562, 129544, 129552, 8482, 129539, 24532, 129536, 216010, 188197, 188198, 188199, 137775, 137776, 137777, 137778, 137779, 216008, 172574, 46305, 188181, 188175, 188176, 188178, 216716, 129569, 129570, 129563, 129564, 129565, 129566, 129567, 129568, 230531, 230528, 230529, 230530, 183712, 137904, 192045, 137897, 137898, 137899, 137900, 137901, 137902, 198825, 198823, 177138, 177137};
        turn_penalty = 20.94736646101775435;
        expected = 2679.30040663779118404;
        actual = computePathTravelTime(path, turn_penalty);
        CHECK(relative_error(expected, actual) < 0.002000000);

        path = {35682, 35681, 35680, 35690, 35697, 26518, 26519, 174714, 137903, 137902, 137901, 137900, 137899, 137898, 137897, 137907, 137908, 183713, 230530, 230529, 230528, 230531, 129568, 129567, 129566, 129565, 129564, 129563, 129571, 129572, 216716, 188178, 107831, 188196, 188200, 188187, 188194, 46306, 46307, 46308, 137760, 188182, 188193, 24535, 24536, 165934, 165935, 17480, 12217, 24537, 81435, 139372, 137773, 129538, 129537, 129547, 129549, 129542, 23564, 23563, 129545, 129548, 129543, 1253, 8022, 129546, 47629, 33932, 27781, 27782, 30116, 30117, 141398, 47630, 107415, 107413, 129609, 129613, 22720, 22719, 129608, 129612, 47625, 47626, 119448, 129573, 129574, 28533, 28534, 250912, 8020, 22541, 22540, 22536, 22535, 22568, 22570, 435, 22588, 29633, 29647, 29648, 216012, 10678, 436, 138914, 219421, 219422, 5733, 5731, 5732, 5740, 5741, 5764, 5765, 5702, 5777, 5776, 128640, 141702, 141701, 28382, 28383, 28386, 28387, 139877, 554, 139878, 87453, 87448, 192404, 87445, 87439, 249855, 28299, 28301, 116837, 28289, 28290, 116817, 23394, 23395, 131959, 552, 23371, 23372, 9155, 9154, 116805, 116806, 116801, 240609, 28655, 28656, 240607, 28664, 28665, 549, 550, 85330, 85344, 85343, 85342, 85358, 85359, 39174, 39175, 39176, 15918, 15917, 9455, 9456, 1, 8188, 108264, 535, 116696, 63409, 63410, 13906, 13905, 13941, 13942, 63903, 63904, 63884, 63885, 141602, 141601, 537, 141314, 86745, 86746, 14051, 14052, 14053, 108889, 538, 108890, 157306, 108869, 108865, 540, 9419, 9418, 9424, 9425, 108848, 108857, 542, 9281, 108519, 108516, 116520, 544, 547, 116498, 108705, 112301, 99129, 99127, 19949, 112299, 108640, 167194, 167195, 108666, 62830, 62771, 52548, 52549, 50087, 185346, 53211, 50050};
        turn_penalty = 4.31686029372284885;
        expected = 2972.48875730935787942;
        actual = computePathTravelTime(path, turn_penalty);
        CHECK(relative_error(expected, actual) < 0.002000000);

        path = {81204, 81167, 81148, 119416, 56271, 265865, 265866, 265867, 277983, 180753, 180754, 180755, 180756, 180757, 119402, 119403, 119404, 86859, 86860, 86861, 86907, 86888, 86870, 86871, 86872, 86873, 86874, 86904, 86916, 86917, 87009, 87010, 87011, 87012, 87013, 87014, 87024, 87025, 87022, 87006, 87026, 87016, 87004, 86996, 86972, 86877, 23195, 7202, 7203, 165958, 165959, 7222, 116967, 120370, 116961, 23200, 23198, 23199, 116955, 23806, 23805, 116956, 24550, 24560, 24564, 24561, 24558, 7171, 117603, 116944, 57094, 224755, 29918, 450, 24176, 24177, 9821, 24090, 24089, 169771, 85900, 34152, 34153, 85901, 85902, 85903, 85904, 34191, 34192, 85905, 13439, 13440, 85906, 85907, 85908, 85909, 85910, 34874, 85912, 85913, 85911, 85916, 85917, 85919, 85918, 91408, 91409, 85920, 242492, 85921, 117582, 249772, 249773, 107479, 249770, 85899, 249775, 249780, 36392, 95576, 95577, 12180, 12181, 85922, 85923, 85924, 85925, 85926, 85927, 106088, 249786, 2886, 2885, 107483, 133033, 249871, 215719, 130730, 130729, 222985, 234702, 250441, 221950, 250442, 24381, 24382, 24403, 24404, 250444, 250445, 250457, 250468, 221996, 221997, 221999, 222000, 221998, 88084, 88085, 117303, 7749, 7750, 133692, 117302, 168437, 91254, 91255, 36281, 36282, 168438, 250473, 250474, 91036, 91029, 221307, 179810, 144460, 18629, 18632, 125607, 180765, 118261, 126367, 125615, 125614, 125611, 63944, 63945, 250499, 19077, 19078, 133695, 250504, 250505, 250507, 250508, 250510, 250512, 250515, 250516, 250519, 176239, 133667, 250521, 250522, 26712, 26713, 133762, 133764, 133765, 129978, 129977, 129981, 107757, 218175, 172248, 100509, 114044, 114041, 114042, 129984, 107749, 107750, 107751, 107752, 107753, 129957, 129958, 51570, 250600, 248185, 183913, 184114, 183912, 215646};
        turn_penalty = 24.49227607808817098;
        expected = 3060.28617954217224906;
        actual = computePathTravelTime(path, turn_penalty);
        CHECK(relative_error(expected, actual) < 0.002000000);

    } //path_cost_toronto_canada

} //path_cost_toronto_canada_public

